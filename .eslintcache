[{"/var/www/reactTest/test/src/index.js":"1","/var/www/reactTest/test/src/App.js":"2","/var/www/reactTest/test/src/reportWebVitals.js":"3","/var/www/reactTest/test/src/Pages/Main.js":"4","/var/www/reactTest/test/src/Components/Main/Main.js":"5","/var/www/reactTest/test/src/Pages/Shop.js":"6","/var/www/reactTest/test/src/Components/Main/Users.js":"7","/var/www/reactTest/test/src/Components/Main/User.js":"8","/var/www/reactTest/test/src/Pages/SingleUser.js":"9","/var/www/reactTest/test/src/Components/Mafia.js":"10","/var/www/reactTest/test/src/Components/Game.js":"11","/var/www/reactTest/test/src/Components/404.js":"12","/var/www/reactTest/test/src/Components/Spy.js":"13","/var/www/reactTest/test/src/Components/Player.js":"14","/var/www/reactTest/test/src/Components/Preloader.js":"15"},{"size":500,"mtime":1607078376890,"results":"16","hashOfConfig":"17"},{"size":972,"mtime":1613745384744,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607078376894,"results":"19","hashOfConfig":"17"},{"size":259,"mtime":1607079215024,"results":"20","hashOfConfig":"17"},{"size":439,"mtime":1607082467292,"results":"21","hashOfConfig":"17"},{"size":192,"mtime":1607079666752,"results":"22","hashOfConfig":"17"},{"size":1445,"mtime":1607082467272,"results":"23","hashOfConfig":"17"},{"size":663,"mtime":1607087546573,"results":"24","hashOfConfig":"17"},{"size":467,"mtime":1607086815627,"results":"25","hashOfConfig":"17"},{"size":7863,"mtime":1613749483571,"results":"26","hashOfConfig":"17"},{"size":8272,"mtime":1612967635447,"results":"27","hashOfConfig":"17"},{"size":1057,"mtime":1612871776850,"results":"28","hashOfConfig":"17"},{"size":6643,"mtime":1612884718810,"results":"29","hashOfConfig":"17"},{"size":3914,"mtime":1613745114229,"results":"30","hashOfConfig":"17"},{"size":552,"mtime":1613745449528,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"cclohx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/var/www/reactTest/test/src/index.js",[],["69","70"],"/var/www/reactTest/test/src/App.js",["71"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Mafia from \"./Components/Mafia\";\nimport Game from \"./Components/Game\";\nimport ErrorPage from \"./Components/404\";\nimport Spy from \"./Components/Spy\";\nimport Preloader from \"./Components/Preloader\";\nfunction App() {\n    if(window.location.href !== window.location.origin + \"/\" && window.location.href !== window.location.origin + \"/error\" && window.location.href !== window.location.origin + \"/game\"){\n        window.location.href = window.location.origin + \"/error\";\n    }\n  return (\n      <Router>\n        <div className=\"App\">\n            <Preloader />\n            <Route path=\"/\" exact component={Mafia} />\n            <Route path=\"/game\" exact component={Game} />\n            <Route path=\"/error\" exact component={ErrorPage} />\n            <Route path=\"/spy\" exact component={Spy} />\n        </div>\n      </Router>\n\n  );\n}\n\nexport default App;\n","/var/www/reactTest/test/src/reportWebVitals.js",[],"/var/www/reactTest/test/src/Pages/Main.js",[],["72","73"],"/var/www/reactTest/test/src/Components/Main/Main.js",[],"/var/www/reactTest/test/src/Pages/Shop.js",[],"/var/www/reactTest/test/src/Components/Main/Users.js",[],"/var/www/reactTest/test/src/Components/Main/User.js",[],"/var/www/reactTest/test/src/Pages/SingleUser.js",[],"/var/www/reactTest/test/src/Components/Mafia.js",["74","75","76"],"import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Mafia extends Component {\n    state = {\n        randomRoles: [],\n        players: 0,\n        isReady: false,\n        playerStatus: false,\n        randomedRoles: [],\n        indexArray: 0,\n        isDoctor: false,\n        isDon: false,\n        showError: false,\n        errorText: \"\",\n        showModalWindow: false,\n    }\n\n    createArrayWithRoles = () => {\n        // const {showError} = this.state;\n        if (this.state.players === 0) {\n            this.setState({showError: true, errorText: \"Введите количество игроков\"})\n        }\n        else if (typeof +this.state.players != \"number\"){\n            this.setState({showError: true, errorText: \"Вам нужно ввести цифру игроков\"})\n        }\n        else if(this.state.players <5){\n            this.setState({showError: true, errorText: \"Минимальное количество игроков - 5\"})\n        }\n        else {\n            const {isDoctor, isDon} = this.state;\n            let roles = [];\n            if (this.state.players >= 5 && this.state.players < 7) {\n                roles = [\"Мафия\", \"Шериф\"]\n            } else if (this.state.players >= 7 && this.state.players <= 8) {\n                roles = [\"Мафия\", \"Мафия\", \"Шериф\"];\n            } else if (this.state.players >= 9) {\n                roles = ['Мафия', \"Мафия\", \"Мафия\", \"Шериф\"];\n\n            }\n            if (isDoctor) {  \n                roles.push(\"Доктор\");\n            }\n            if (isDon) {\n                roles.shift();\n                roles.push(\"Дон\")\n            }\n            let roleLength = roles.length;\n            for (let i = 0; i < this.state.players - roleLength; i++) {\n                roles.push(\"Мирный житель\")\n            }\n            console.log(roles)\n            this.shuffle(roles);\n            this.setState({isReady: true})\n        }\n    }\n    shuffle = async (array) => {\n        array.sort(() => Math.random() - 0.5);\n        await this.setState({\n            randomedRoles: array,\n        })\n    }\n\n    render() {\n        const {randomRoles, showModalWindow, isReady, players, playerStatus, randomedRoles, indexArray, isDoctor, isDon, showError, errorText} = this.state;\n        return (\n            <div className=\"mafia\">\n                <svg onClick={()=>this.setState({showModalWindow: !showModalWindow})} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"cog\"\n                     className=\"svg-inline--fa fa-cog fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n                     viewBox=\"0 0 512 512\">\n                    <path fill=\"currentColor\"\n                          d=\"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"></path>\n                </svg>\n                {\n                    showModalWindow && (\n                        <div className=\"modal-change\">\n                            <Link to=\"/\" className=\"item\">Мафия</Link>\n                            <div className=\"separator\"></div>\n                            <Link to=\"/spy\" className=\"item\">Шпион</Link>\n                        </div>\n                    )\n                }\n                <div className=\"_container\">\n                    {\n                        isReady ? (\n                            <div className=\"mafia-card\">\n                                {\n                                    playerStatus ? (\n                                        <div className=\"player-role\">\n                                            <p className=\"player-number\">Игрок номер {indexArray + 1}</p>\n                                            <p className=\"player-role\">{randomedRoles[indexArray]}</p>\n                                            <button className=\"btn next-btn\"\n                                                    onClick={() => this.setState({\n                                                        playerStatus: false,\n                                                        indexArray: indexArray + 1\n                                                    })}>Следующий\n                                            </button>\n                                        </div>\n                                    ) : indexArray < players ? (\n                                        <button onClick={() => this.setState({playerStatus: true})}\n                                                className=\"btn\">Выбор\n                                            карты</button>) : (\n                                        <div>\n                                            <Link to={{pathname: \"/game\", propsRoles: randomedRoles}} className=\"btn\">Начать\n                                                игру</Link>\n                                        </div>\n                                    )\n                                }\n\n                            </div>\n                        ) : (\n                            <div className=\"mafia-card\">\n                                <div className=\"players-set\">\n                                    {showError &&\n                                    <div className=\"error-modal\">\n                                        {errorText}\n                                    </div>\n                                    }\n                                    <p className=\"title-player\">Введите кол-во игроков</p>\n                                    <input type=\"number\" placeholder=\"Введите кол-во игроков\" min=\"5\" max=\"15\"\n                                           className=\"players-input\"\n                                           onChange={(e) => this.setState({players: e.target.value})}/>\n                                    <button className=\"btn\" onClick={this.createArrayWithRoles}>Начать</button>\n                                    <div className=\"variants\">\n                                        <div className=\"checkbox-wrapper\">\n                                            <input onChange={(e) => this.setState({isDoctor: e.target.value})}\n                                                   type=\"checkbox\" id=\"checkbox-doc\"/>\n                                            <label className=\"label-ch\" htmlFor=\"checkbox-doc\">Доктор</label>\n                                        </div>\n                                        <div className=\"checkbox-wrapper\">\n                                            <input onChange={(e) => this.setState({isDon: e.target.value})}\n                                                   type=\"checkbox\" id=\"checkbox-don\"/>\n                                            <label className=\"label-ch\" htmlFor=\"checkbox-don\">Дон</label>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        )\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}","/var/www/reactTest/test/src/Components/Game.js",["77","78","79","80","81","82","83","84"],"import React, {useState, useEffect} from \"react\";\nimport $ from \"jquery\";\nimport Player from \"./Player\";\nimport MafiaMusic from \"../assets /mafia.mp3\";\n\nexport default function Game(propsRoles) {\n    const [role, setRole] = useState(propsRoles.location.propsRoles);\n    const [nightKill, setNightKill] = useState(0);\n    const [nightHeal, setNightHeal] = useState(0);\n    const [nightCheck, setNightCheck] = useState(0);\n    const [nights, setNights] = useState([]);\n    const [isShowNight, setShowNight] = useState(false);\n    const [timer, setTimer] = useState(60);\n    const [stage, setStage] = useState(\"mafia\");\n    const [gameStart, setGameStart] = useState(false);\n\n    $(document).ready(function () {\n        $('.add-night').click(function () {\n            $('.mafia').addClass('mafia-invis');\n        })\n        $('.fa-times-night').click(function () {\n            $('.mafia').removeClass('mafia-invis');\n        })\n    })\n    useEffect(() => {\n\n        if (timer === -5 && stage === \"sheriff\") {\n            setStage(\"Game\");\n            setGameStart(true)\n        }\n        if (timer === -7 && stage !== \"sheriff\") {\n            setStage(\"sheriff\");\n            setTimer(20);\n            // document.getElementsByTagName(\"audio\")[0].pause();\n\n        }\n    }, [timer])\n\n    useEffect(() => {\n        // document.getElementsByTagName(\"audio\")[0].play();\n\n        let timerInterval = setInterval(() => {\n            setTimer(prevState => prevState - 1);\n        }, 1000)\n        if (role !== undefined) {\n            localStorage.setItem(\"roles\", JSON.stringify(role));\n        }\n    }, [])\n\n    function renderSelect(arr) {\n        if (role === undefined) {\n            let localRoles = localStorage.getItem(\"roles\");\n            if (localRoles == undefined) {\n                window.location.href = window.location.href.slice(0, -4).concat('error');\n            } else {\n                arr = JSON.parse(localRoles);\n            }\n        }\n        if (arr === undefined) {\n            window.location.href = window.location.href.slice(0, -4).concat('error');\n        }\n        return arr.map((item, index) => {\n            return (\n                <option key={index} value={index + 1}>{index + 1}</option>\n            )\n        })\n    }\n\n    function renderFields(arr) {\n\n        if (role === undefined) {\n            let localRoles = localStorage.getItem(\"roles\");\n            if (localRoles == undefined) {\n                window.location.href = window.location.href.slice(0, -4).concat('error');\n            } else {\n                arr = JSON.parse(localRoles);\n\n            }\n        }\n        if (arr === undefined) {\n            window.location.href = window.location.href.slice(0, -4).concat('error');\n        }\n        return arr.map((item, index) => {\n            return (\n                <Player key={index} id={index + 1} role={item}/>\n            )\n        })\n    }\n\n    function setNight() {\n        setNights([\n            `Стреляли в: ${nightKill}`,\n            `Лечили: ${nightHeal}`,\n            `Проверяли: ${nightCheck}`,\n        ]);\n        if (nightKill != nightHeal) {\n            let dead = $('.game-role')[nightKill - 1];\n            // console.log($('.game-role')[nightKill-1]);\n            $(dead).addClass('text-dec-lth');\n        }\n        setShowNight(true);\n        \n    }\n\n    function endGame() {\n        localStorage.setItem(\"roles\", undefined);\n        window.location.href = window.location.href.slice(0, -4);\n    }\n\n    function setNext() {\n        if (stage === \"mafia\") {\n            setStage(\"sheriff\");\n            setTimer(20);\n        } else if (stage === \"sheriff\") {\n            setStage(\"Game\");\n            setGameStart(true)\n        }\n    }\n\n    return (\n        <div className=\"mafia\">\n            {\n                !gameStart ? (\n                        <div className=\"modal-start-game\">\n\n                            <p className=\"title dark\">{stage === \"mafia\" ? 'Договорка мафии' : stage === \"sheriff\" ? \"Знакомство с шерифом\" : stage === \"Game\" ? \"\" : \"\"}</p>\n\n                            <div className=\"timer title dark\">\n                                {\n                                    timer >= 0 ? timer < 10 ? `0:0${timer}` : `0:${timer}` : \"Время вышло\"\n                                }\n                            </div>\n\n                            <button onClick={setNext} className=\"btn\">\n                                Далее\n                            </button>\n\n                        </div>\n                    ) :\n\n\n                    <div className=\"_container\">\n                        <div className=\"mafia-wrapper\">\n                            <p className=\"title\">Игроки:</p>\n                            {renderFields(role)}\n                        </div>\n                        <div className=\"nights\">\n                            <p className=\"title\">Ночь:</p>\n                            <p className=\"subtitle\">Мафия стреляла в игрока</p>\n                            <select onChange={(e) => setNightKill(e.target.value)} className=\"select-night\" name=\"\"\n                                    id=\"\">\n                                <option value=\"none\" defaultValue disabled>Выбери игрока</option>\n                                {renderSelect(role)}\n                            </select>\n                            <p className=\"subtitle\">Доктор лечил игрока:</p>\n                            <select onChange={(e) => setNightHeal(e.target.value)} className=\"select-night\" name=\"\"\n                                    id=\"\">\n                                <option value=\"none\" defaultValue disabled>Выбери игрока</option>\n                                {renderSelect(role)}\n                            </select>\n                            <p className=\"subtitle\">Шериф проверил игрока:</p>\n                            <select onChange={(e) => setNightCheck(e.target.value)} className=\"select-night\" name=\"\"\n                                    id=\"\">\n                                <option value=\"none\" defaultValue disabled>Выбери игрока</option>\n                                {renderSelect(role)}\n                            </select>\n                            <button className=\"btn add-night\" onClick={setNight}>Записать</button>\n                            <button className=\"btn add-night mt-20\" onClick={endGame}>Закончить игру</button>\n                            {isShowNight &&\n                            <div className=\"night-accidents\">\n                                <svg onClick={() => setShowNight(false)} aria-hidden=\"true\" focusable=\"false\"\n                                     data-prefix=\"fas\"\n                                     data-icon=\"times\"\n                                     className=\"svg-inline--fa fa-times fa-times-night fa-w-11\" role=\"img\"\n                                     xmlns=\"http://www.w3.org/2000/svg\"\n                                     viewBox=\"0 0 352 512\">\n                                    <path fill=\"currentColor\"\n                                          d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"></path>\n                                </svg>\n                                {/*<p className=\"night-accidents-label\">Killed Healed Checked</p>*/}\n                                <p className=\"night-title\">Ночью:</p>\n                                <p className=\"night-accidents-label\">{nights[0]}</p>\n                                <p className=\"night-accidents-label\">{nights[1]}</p>\n                                <p className=\"night-accidents-label\">{nights[2]}</p>\n                            </div>\n                            }\n                        </div>\n                    </div>\n            }\n        </div>\n\n    )\n}","/var/www/reactTest/test/src/Components/404.js",[],"/var/www/reactTest/test/src/Components/Spy.js",["85","86","87","88"],"import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nexport default class Spy extends Component {\n    state = {\n        randomRoles: [],\n        players: 0,\n        isReady: false,\n        playerStatus: false,\n        randomedRoles: [],\n        indexArray: 0,\n        isDoctor: false,\n        isDon: false,\n        showError: false,\n        errorText: \"\",\n        showModalWindow: false,\n    }\n\n    createArrayWithRoles = () => {\n        // const {showError} = this.state;\n        if (this.state.players === 0) {\n            this.setState({showError: true, errorText: \"Введите количество игроков\"})\n        }\n        else if (typeof +this.state.players != \"number\"){\n            this.setState({showError: true, errorText: \"Вам нужно ввести цифру игроков\"})\n        }\n        else {\n            const {isDoctor, isDon} = this.state;\n            let roles = [];\n            if (this.state.players >= 5 && this.state.players < 7) {\n                roles = [\"Убийца\"]\n            } else if (this.state.players >= 7 && this.state.players <= 8) {\n                roles = [\"Убийца\"];\n            } else if (this.state.players == 9) {\n                roles = ['Убийца', \"Убийца\"];\n\n            }\n            if (isDoctor) {\n                roles.push(\"Доктор\");\n            }\n            if (isDon) {\n                roles.shift();\n                roles.push(\"Дон\")\n            }\n            let roleLength = roles.length;\n            for (let i = 0; i < this.state.players - roleLength; i++) {\n                roles.push(\"Житель\")\n            }\n            console.log(roles)\n            this.shuffle(roles);\n            this.setState({isReady: true})\n        }\n    }\n    shuffle = async (array) => {\n        array.sort(() => Math.random() - 0.5);\n        await this.setState({\n            randomedRoles: array,\n        })\n    }\n\n    render() {\n        const {randomRoles, showModalWindow, isReady, players, playerStatus, randomedRoles, indexArray, isDoctor, isDon, showError, errorText} = this.state;\n        return (\n            <div className=\"mafia\">\n                <svg onClick={()=>this.setState({showModalWindow: !showModalWindow})} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"cog\"\n                     className=\"svg-inline--fa fa-cog fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n                     viewBox=\"0 0 512 512\">\n                    <path fill=\"currentColor\"\n                          d=\"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"></path>\n                </svg>\n                {\n                    showModalWindow && (\n                        <div className=\"modal-change\">\n                            <Link to=\"/\" className=\"item\">Мафия</Link>\n                            <div className=\"separator\"></div>\n                            <Link to=\"/spy\" className=\"item\">Шпион</Link>\n                        </div>\n                    )\n                }\n                <div className=\"_container\">\n                    {\n                        isReady ? (\n                            <div className=\"mafia-card\">\n                                {\n                                    playerStatus ? (\n                                        <div className=\"player-role\">\n                                            <p className=\"player-number\">Игрок номер {indexArray + 1}</p>\n                                            <p className=\"player-role\">{randomedRoles[indexArray]}</p>\n                                            <button className=\"btn next-btn\"\n                                                    onClick={() => this.setState({\n                                                        playerStatus: false,\n                                                        indexArray: indexArray + 1\n                                                    })}>Следующий\n                                            </button>\n                                        </div>\n                                    ) : indexArray < players ? (\n                                        <button onClick={() => this.setState({playerStatus: true})}\n                                                className=\"btn\">Выбор\n                                            карты</button>) : (\n                                        <div>\n                                            <Link to={{pathname: \"/game\", propsRoles: randomedRoles}} className=\"btn\">Начать\n                                                игру</Link>\n                                        </div>\n                                    )\n                                }\n\n                            </div>\n                        ) : (\n                            <div className=\"mafia-card\">\n                                <div className=\"players-set\">\n                                    {showError &&\n                                    <div className=\"error-modal\">\n                                        {errorText}\n                                    </div>\n                                    }\n                                    <p className=\"title-player\">Введите кол-во игроков</p>\n                                    <input type=\"number\" placeholder=\"Введите кол-во игроков\" min=\"5\" max=\"15\"\n                                           className=\"players-input\"\n                                           onChange={(e) => this.setState({players: e.target.value})}/>\n                                    <button className=\"btn\" onClick={this.createArrayWithRoles}>Начать</button>\n\n                                </div>\n                            </div>\n                        )\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}","/var/www/reactTest/test/src/Components/Player.js",["89"],"import React, {Component} from \"react\";\nimport $ from \"jquery\";\n\nexport default class Player extends Component{\n    state = {\n        banStatus: {\n            first: false,\n            second: false,\n            third: false,\n        }\n    }\n\n    banStatus =  () => {\n        const {first,second,third} = this.state.banStatus;\n        console.log(first,second,third);\n        if(!first){\n             this.setState({banStatus: {first: true, second: false, third: false}})\n            return 0;\n        }\n        else if(first && !second){\n            this.setState({banStatus: {first: true, second: true, third: false}})\n            return 0;\n        }\n        else if(first && second && !third){\n            this.setState({banStatus: {first: true, second: true,third: true}})\n            return 0;\n        }\n    }\n\n    render() {\n        const {role, id} = this.props;\n        const {banStatus} = this.state;\n        return(\n            <div className=\"item-role\">\n                <p className=\"game-index\">{id}.</p>\n                <p className=\"game-role\">\n                    {role}\n                </p>\n                <div className=\"buttons-row\">\n                    <button className=\"btn-game\">\n                        <svg onClick={()=>this.banStatus()} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"ban\"\n                             className={banStatus.first ? \"svg-inline--fa fa-ban fa-w-16 active-ban\" : \"svg-inline--fa fa-ban fa-w-16\"} role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n                             viewBox=\"0 0 512 512\">\n                            <path fill=\"currentColor\"\n                                  d=\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\"></path>\n                        </svg>\n                    </button>\n                    <button className=\"btn-game\">\n                        <svg onClick={()=>this.banStatus()} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"ban\"\n                             className={banStatus.second ? \"svg-inline--fa fa-ban fa-w-16 active-ban\" : \"svg-inline--fa fa-ban fa-w-16\"} role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n                             viewBox=\"0 0 512 512\">\n                            <path fill=\"currentColor\"\n                                  d=\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\"></path>\n                        </svg>\n                    </button>\n                    <button className=\"btn-game\">\n                        <svg onClick={()=>this.banStatus()} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"ban\"\n                             className={banStatus.third ? \"svg-inline--fa fa-ban fa-w-16 active-ban\" : \"svg-inline--fa fa-ban fa-w-16\"} role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n                             viewBox=\"0 0 512 512\">\n                            <path fill=\"currentColor\"\n                                  d=\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\"></path>\n                        </svg>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}","/var/www/reactTest/test/src/Components/Preloader.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":12},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"94","severity":1,"message":"100","line":65,"column":16,"nodeType":"96","messageId":"97","endLine":65,"endColumn":27},{"ruleId":"94","severity":1,"message":"101","line":65,"column":105,"nodeType":"96","messageId":"97","endLine":65,"endColumn":113},{"ruleId":"94","severity":1,"message":"102","line":65,"column":115,"nodeType":"96","messageId":"97","endLine":65,"endColumn":120},{"ruleId":"94","severity":1,"message":"103","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":18},{"ruleId":"94","severity":1,"message":"104","line":7,"column":18,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":37,"column":8,"nodeType":"107","endLine":37,"endColumn":15,"suggestions":"108"},{"ruleId":"94","severity":1,"message":"109","line":42,"column":13,"nodeType":"96","messageId":"97","endLine":42,"endColumn":26},{"ruleId":"105","severity":1,"message":"110","line":48,"column":8,"nodeType":"107","endLine":48,"endColumn":10,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":53,"column":28,"nodeType":"114","messageId":"115","endLine":53,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":73,"column":28,"nodeType":"114","messageId":"115","endLine":73,"endColumn":30},{"ruleId":"112","severity":1,"message":"116","line":96,"column":23,"nodeType":"114","messageId":"115","endLine":96,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":34,"column":43,"nodeType":"114","messageId":"115","endLine":34,"endColumn":45},{"ruleId":"94","severity":1,"message":"100","line":62,"column":16,"nodeType":"96","messageId":"97","endLine":62,"endColumn":27},{"ruleId":"94","severity":1,"message":"101","line":62,"column":105,"nodeType":"96","messageId":"97","endLine":62,"endColumn":113},{"ruleId":"94","severity":1,"message":"102","line":62,"column":115,"nodeType":"96","messageId":"97","endLine":62,"endColumn":120},{"ruleId":"94","severity":1,"message":"117","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":9},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["118"],["119"],"'randomRoles' is assigned a value but never used.","'isDoctor' is assigned a value but never used.","'isDon' is assigned a value but never used.","'MafiaMusic' is defined but never used.","'setRole' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stage'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'timerInterval' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'role'. Either include it or remove the dependency array.",["121"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'$' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [stage, timer]",{"range":"126","text":"127"},"Update the dependencies array to be: [role]",{"range":"128","text":"129"},[1271,1278],"[stage, timer]",[1596,1598],"[role]"]